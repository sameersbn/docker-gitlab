---
name: "docker-gitlab"

image:
  repository: "sameersbn/gitlab"
  tag: "10.0.3"
  pullPolicy: Always

ingress:
  ## If true, Ingress will be created
  ##
  enabled: false

  ## Ingress annotations
  ##
  # annotations:
  #   kubernetes.io/ingress.class: nginx
  #   kubernetes.io/tls-acme: 'true'

  ## Ingress TLS configuration
  ## Secrets must be manually created in the namespace
  ##
  # tls:
  #   - secretName: gitlab-server-tls
  #     hosts:
  #       - gitlab.domain.com

timezone: "Asia/Tokyo"

gitlab:
  host: "gitlab.default.svc.cluster.local"
  email: "gitlab@example.com"
  emailReplyTo: "gitlab@example.com"
  https: "true"
  port: "443"
  ssh_port: "22"
  projectsIssues: "false"
  timezone: "Tokyo"
  secretsDbKeyBase: twzCjjckpMtfqhWzd4LzWdpj3NsPK9chWhh3kdMqsqqvzPPc4PcJsg4vsRjwFpF3
  secretsKeyBase: rJ9wsvpWf3wkmnvn9bv7g39dRfMsLxCrmskf9JMtJfHVvgP77WXpWWWKHTN4qtxH
  secretsOtpKeyBase: dtbbvPsFhJCr4q9z4NKzjFh3zWXXnRVqJsTMv3HrdkvkR39LgxHXK3PbMKvnwCFR
  gitlabRootPassword: "5iveL!fe"
  monitoringIpWhitelist: "10.0.0.0/8"
  prometheusMetricsEnabled: "false"
  prometheusMultiprocDir: "tmp/prometheus_multiproc_dir"
  ## GitLab Pod annotations
  ##
  # podAnnotations:
  #   prometheus.io/scrape: "true"
  #   prometheus.io/port: 80
  #   prometheus.io/path: "/-/metrics"

redis:
  redisPassword: ""
  usePassword: false

  persistence:
    existingClaim: ""

## Configuration values for the postgresql dependency.
## ref: https://github.com/kubernetes/charts/blob/master/stable/postgresql/README.md
##
postgresql:
  # 9.6 is the newest supported version for the GitLab container
  imageTag: "9.6.2"
  cpu: 1000m
  memory: 1Gi

  postgresUser: gitlab
  postgresPassword: mnvn9bv7g39
  postgresDatabase: gitlab

  persistence:
    existingClaim: ""

nginx:
  max_upload_size: 2G
  workers: "2"

unicorn:
  workers: "3"
  timeout: "60"

smtp:
  enabled: "false"
  domain: "www.gmail.com"
  host: "smtp.gmail.com"
  port: "587"
  user: ""
  pass: ""
  starttls: "true"
  tls: "false"
  opensslVerifyMode: "none"
  authentication: "login"

nodeSelector: {}

service:
  type: ClusterIP
  httpPort: 80
  sshPort: 22

resources:
  ## GitLab requires a good deal of resources. We have split out Postgres and
  ## redis, which helps some. Refer to the guidelines for larger installs.
  ## ref: https://docs.gitlab.com/ce/install/requirements.html#hardware-requirements
  requests:
    memory: 3Gi
    cpu: 1
  limits:
    memory: 6Gi
    cpu: 2

persistentVolume:
  ## If true, mailserver will create/use a Persistent Volume Claim
  ## If false, use emptyDir
  ##
  enabled: true

  ## mailserver data Persistent Volume access modes
  ## Must match those of existing PV or dynamic provisioner
  ## Ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
  ##
  accessModes:
    - ReadWriteMany

  ## mailserver data Persistent Volume Claim annotations
  ##
  annotations: {}

  ## mailserver data Persistent Volume existing claim name
  ## Requires mailserver.persistentVolume.enabled: true
  ## If defined, PVC must be created manually before volume will be bound
  existingClaim: ""

  ## mailserver data Persistent Volume size
  ##
  size: 2Gi

  ## mailserver data Persistent Volume Storage Class
  ## If defined, volume.beta.kubernetes.io/storage-class: <storageClass>
  ## Default: volume.alpha.kubernetes.io/storage-class: default
  ##
  storageClass: ""
